# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[package]
name = "ballista-core"
description = "Ballista Distributed Compute"
license = "Apache-2.0"
version = "0.11.0"
homepage = "https://github.com/apache/arrow-ballista"
repository = "https://github.com/apache/arrow-ballista"
readme = "README.md"
authors = ["Apache Arrow <dev@arrow.apache.org>"]
edition = "2021"
build = "build.rs"

# Exclude proto files so crates.io consumers don't need protoc
exclude = ["*.proto"]

[package.metadata.docs.rs]
rustc-args = ["--cfg", "docsrs"]

[dependencies]
# ahash 0.8.11 will make unit tests in shuffle_writer.rs failed as the hash value of 1 and 2 has changed.
# seed 0,0,0,0, two buckets
# ahash 0.8.10  1 -> 11003429890058878283, 2 -> 12908271710217070096  1 and 2 will be distributed into different bucket
# ahash 0.8.11  1 -> 11678494436396399123, 2 -> 14037173625081469373  1 and 2 will be distributed into same bucket
ahash = "=0.8.10"
arrow = { workspace = true }
arrow-flight = { workspace = true }
async-trait = "0.1.41"
chrono = { version = "0.4", default-features = false }
datafusion = { workspace = true }
datafusion-proto = { workspace = true }
futures = "0.3"

itertools = "0.12"
log = "0.4"

prost = "0.12"
rand = "0.8"
serde = { version = "1", features = ["derive"] }
sqlparser = { workspace = true }
tokio = "1.0"
tokio-stream = { version = "0.1", features = ["net"] }
tonic = { workspace = true }

[dev-dependencies]
tempfile = "3"

[build-dependencies]
rustc_version = "0.4.0"
tonic-build = { workspace = true }
